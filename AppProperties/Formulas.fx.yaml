GetUserFromEmail(): Void = {Set(UserLoggedIn, LookUp(Users,O365Email=User().Email))};

//Dictionary Translator
Dict(KeyWordSearch: Text):Text = LookUp(Dictionary,KeyWord=KeyWordSearch,ClientWord);

GetGoogleMaterialIcons(): Void = {ClearCollect(GoogleMaterialIcons, [
    {
    IconName: "Add",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M460-460H240v-40h220v-220h40v220h220v40H500v220h-40v-220Z'/></svg>"
  },
  {
    IconName: "Check",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M382-267.69 183.23-466.46 211.77-495 382-324.77 748.23-691l28.54 28.54L382-267.69Z'/></svg>"
  },
  {
    IconName: "Close",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M256-227.69 227.69-256l224-224-224-224L256-732.31l224 224 224-224L732.31-704l-224 224 224 224L704-227.69l-224-224-224 224Z'/></svg>"
  },
  {
    IconName: "Delete",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M304.62-160q-26.85 0-45.74-18.88Q240-197.77 240-224.62V-720h-40v-40h160v-30.77h240V-760h160v40h-40v495.38q0 27.62-18.5 46.12Q683-160 655.38-160H304.62ZM680-720H280v495.38q0 10.77 6.92 17.7 6.93 6.92 17.7 6.92h350.76q9.24 0 16.93-7.69 7.69-7.69 7.69-16.93V-720ZM392.31-280h40v-360h-40v360Zm135.38 0h40v-360h-40v360ZM280-720v520-520Z'/></svg>"
  },
  {IconName: "Edit", Filled: false, Path:"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M200-200h43.92l427.93-427.92-43.93-43.93L200-243.92V-200Zm-40 40v-100.77l527.23-527.77q6.15-5.48 13.57-8.47 7.43-2.99 15.49-2.99t15.62 2.54q7.55 2.54 13.94 9.15l42.69 42.93q6.61 6.38 9.04 14 2.42 7.63 2.42 15.25 0 8.13-2.74 15.56-2.74 7.42-8.72 13.57L260.77-160H160Zm600.77-556.31-44.46-44.46 44.46 44.46ZM649.5-649.5l-21.58-22.35 43.93 43.93-22.35-21.58Z'/></svg>"},
  {
    IconName: "FilterAlt",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M470.77-200q-13.15 0-21.96-8.81T440-230.77v-223.08L224.15-726.77q-8.07-10.77-2.19-22Q227.85-760 240.77-760h478.46q12.92 0 18.81 11.23 5.88 11.23-2.19 22L520-453.85v223.08q0 13.15-8.81 21.96T489.23-200h-18.46ZM480-468l198-252H282l198 252Zm0 0Z'/></svg>"
  },
  {
    IconName: "FilterList",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M422.31-280v-40h114.61v40H422.31Zm-150-180v-40h414.61v40H272.31ZM160-640v-40h640v40H160Z'/></svg>"
  },
  {
    IconName: "Lock",
    Filled:false,
    Path:"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M264.62-120q-26.85 0-45.74-18.88Q200-157.77 200-184.62v-350.76q0-26.85 18.88-45.74Q237.77-600 264.62-600H320v-80q0-66.85 46.58-113.42Q413.15-840 480-840t113.42 46.58Q640-746.85 640-680v80h55.38q26.85 0 45.74 18.88Q760-562.23 760-535.38v350.76q0 26.85-18.88 45.74Q722.23-120 695.38-120H264.62Zm0-40h430.76q10.77 0 17.7-6.92 6.92-6.93 6.92-17.7v-350.76q0-10.77-6.92-17.7-6.93-6.92-17.7-6.92H264.62q-10.77 0-17.7 6.92-6.92 6.93-6.92 17.7v350.76q0 10.77 6.92 17.7 6.93 6.92 17.7 6.92ZM480-300q25.31 0 42.65-17.35Q540-334.69 540-360t-17.35-42.65Q505.31-420 480-420t-42.65 17.35Q420-385.31 420-360t17.35 42.65Q454.69-300 480-300ZM360-600h240v-80q0-50-35-85t-85-35q-50 0-85 35t-35 85v80ZM240-160v-400 400Z'/></svg>"
  },
  {
    IconName: "LockOpenRight", 
    Filled: false, 
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M264.62-160h430.76q10.77 0 17.7-6.92 6.92-6.93 6.92-17.7v-350.76q0-10.77-6.92-17.7-6.93-6.92-17.7-6.92H264.62q-10.77 0-17.7 6.92-6.92 6.93-6.92 17.7v350.76q0 10.77 6.92 17.7 6.93 6.92 17.7 6.92ZM480-300q25.31 0 42.65-17.35Q540-334.69 540-360t-17.35-42.65Q505.31-420 480-420t-42.65 17.35Q420-385.31 420-360t17.35 42.65Q454.69-300 480-300ZM240-160v-400 400Zm24.62 40q-26.85 0-45.74-18.88Q200-157.77 200-184.62v-350.76q0-26.85 18.88-45.74Q237.77-600 264.62-600H560v-80q0-66.85 46.58-113.42Q653.15-840 720-840t113.42 46.58Q880-746.85 880-680h-40q0-50-35-85t-85-35q-50 0-85 35t-35 85v80h95.38q26.85 0 45.74 18.88Q760-562.23 760-535.38v350.76q0 26.85-18.88 45.74Q722.23-120 695.38-120H264.62Z'/></svg>"
  },
  {
    IconName: "Logout",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M224.62-160q-27.62 0-46.12-18.5Q160-197 160-224.62v-510.76q0-27.62 18.5-46.12Q197-800 224.62-800h256.15v40H224.62q-9.24 0-16.93 7.69-7.69 7.69-7.69 16.93v510.76q0 9.24 7.69 16.93 7.69 7.69 16.93 7.69h256.15v40H224.62Zm433.84-178.46-28.08-28.77L723.15-460H367.69v-40h355.46l-92.77-92.77 28.08-28.77L800-480 658.46-338.46Z'/></svg>"
  },
  {
    IconName: "Menu",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M160-269.23v-40h640v40H160ZM160-460v-40h640v40H160Zm0-190.77v-40h640v40H160Z'/></svg>"
  },
  {
    IconName: "OpenInNew",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M224.62-160q-27.62 0-46.12-18.5Q160-197 160-224.62v-510.76q0-27.62 18.5-46.12Q197-800 224.62-800h224.61v40H224.62q-9.24 0-16.93 7.69-7.69 7.69-7.69 16.93v510.76q0 9.24 7.69 16.93 7.69 7.69 16.93 7.69h510.76q9.24 0 16.93-7.69 7.69-7.69 7.69-16.93v-224.61h40v224.61q0 27.62-18.5 46.12Q763-160 735.38-160H224.62Zm164.92-201.23-28.31-28.31L731.69-760H560v-40h240v240h-40v-171.69L389.54-361.23Z'/></svg>"
  },
  {
    IconName: "PanelRightClose",
    Filled: false,
    Path:"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M336.15-606.92v253.84L463.85-480l-127.7-126.92ZM224.62-160q-26.85 0-45.74-18.88Q160-197.77 160-224.62v-510.76q0-26.85 18.88-45.74Q197.77-800 224.62-800h510.76q26.85 0 45.74 18.88Q800-762.23 800-735.38v510.76q0 26.85-18.88 45.74Q762.23-160 735.38-160H224.62ZM640-200h120v-535.38q0-9.24-7.69-16.93-7.69-7.69-16.93-7.69H640v560Zm-40 0v-560H224.62q-9.24 0-16.93 7.69-7.69 7.69-7.69 16.93v510.76q0 9.24 7.69 16.93 7.69 7.69 16.93 7.69H600Zm40 0h120-120Z'/></svg>"
  },
  {
    IconName:"PanelRightOpen",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M463.85-353.08v-253.84L336.15-480l127.7 126.92ZM224.62-160q-26.85 0-45.74-18.88Q160-197.77 160-224.62v-510.76q0-26.85 18.88-45.74Q197.77-800 224.62-800h510.76q26.85 0 45.74 18.88Q800-762.23 800-735.38v510.76q0 26.85-18.88 45.74Q762.23-160 735.38-160H224.62ZM640-200h120v-535.38q0-9.24-7.69-16.93-7.69-7.69-16.93-7.69H640v560Zm-40 0v-560H224.62q-9.24 0-16.93 7.69-7.69 7.69-7.69 16.93v510.76q0 9.24 7.69 16.93 7.69 7.69 16.93 7.69H600Zm40 0h120-120Z'/></svg>"
  },
  {
    IconName: "PlayArrow",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M360-272.31v-415.38L686.15-480 360-272.31ZM400-480Zm0 134 211.54-134L400-614v268Z'/></svg>"
  },
  {
    IconName: "PlayCircle",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M400-336.92 623.08-480 400-623.08v286.16ZM480.13-120q-74.67 0-140.41-28.34-65.73-28.34-114.36-76.92-48.63-48.58-76.99-114.26Q120-405.19 120-479.87q0-74.67 28.34-140.41 28.34-65.73 76.92-114.36 48.58-48.63 114.26-76.99Q405.19-840 479.87-840q74.67 0 140.41 28.34 65.73 28.34 114.36 76.92 48.63 48.58 76.99 114.26Q840-554.81 840-480.13q0 74.67-28.34 140.41-28.34 65.73-76.92 114.36-48.58 48.63-114.26 76.99Q554.81-120 480.13-120Zm-.13-40q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z'/></svg>"
  },
  {
    IconName: "PlayDisabled",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M610.31-432.92 582-461.69l27.69-16.93-130.3-85.23L360-683.23v-4.46L686.15-480l-75.84 47.08Zm96.61 266.15L507.69-366.46 360-272.31v-241.84L165.23-708.92l28.31-28.31 542.15 542.15-28.77 28.31ZM400-472.62ZM400-346l77.38-49.23L400-472.62V-346Zm79.39-217.85Z'/></svg>"
  },
  {
    IconName: "Refresh",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M483.08-200q-117.25 0-198.63-81.34-81.37-81.34-81.37-198.54 0-117.2 81.37-198.66Q365.83-760 483.08-760q71.3 0 133.54 33.88 62.23 33.89 100.3 94.58V-760h40v209.23H547.69v-40h148q-31.23-59.85-87.88-94.54Q551.15-720 483.08-720q-100 0-170 70t-70 170q0 100 70 170t170 70q77 0 139-44t87-116h42.46Q725.08-310.15 651-255.08 576.92-200 483.08-200Z'/></svg>"
  },
  {
    IconName: "Search",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M779.38-153.85 528.92-404.31q-30 25.54-69 39.54t-78.38 14q-96.1 0-162.67-66.53-66.56-66.53-66.56-162.57 0-96.05 66.53-162.71 66.53-66.65 162.57-66.65 96.05 0 162.71 66.56Q610.77-676.1 610.77-580q0 41.69-14.77 80.69t-38.77 66.69l250.46 250.47-28.31 28.3ZM381.54-390.77q79.61 0 134.42-54.81 54.81-54.8 54.81-134.42 0-79.62-54.81-134.42-54.81-54.81-134.42-54.81-79.62 0-134.42 54.81-54.81 54.8-54.81 134.42 0 79.62 54.81 134.42 54.8 54.81 134.42 54.81Z'/></svg>"
  },
  {
    IconName: "Settings",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='m405.38-120-14.46-115.69q-19.15-5.77-41.42-18.16-22.27-12.38-37.88-26.53L204.92-235l-74.61-130 92.23-69.54q-1.77-10.84-2.92-22.34-1.16-11.5-1.16-22.35 0-10.08 1.16-21.19 1.15-11.12 2.92-25.04L130.31-595l74.61-128.46 105.93 44.61q17.92-14.92 38.77-26.92 20.84-12 40.53-18.54L405.38-840h149.24l14.46 116.46q23 8.08 40.65 18.54 17.65 10.46 36.35 26.15l109-44.61L829.69-595l-95.31 71.85q3.31 12.38 3.7 22.73.38 10.34.38 20.42 0 9.31-.77 19.65-.77 10.35-3.54 25.04L827.92-365l-74.61 130-107.23-46.15q-18.7 15.69-37.62 26.92-18.92 11.23-39.38 17.77L554.62-120H405.38ZM440-160h78.23L533-268.31q30.23-8 54.42-21.96 24.2-13.96 49.27-38.27L736.46-286l39.77-68-87.54-65.77q5-17.08 6.62-31.42 1.61-14.35 1.61-28.81 0-15.23-1.61-28.81-1.62-13.57-6.62-29.88L777.77-606 738-674l-102.08 42.77q-18.15-19.92-47.73-37.35-29.57-17.42-55.96-23.11L520-800h-79.77l-12.46 107.54q-30.23 6.46-55.58 20.81-25.34 14.34-50.42 39.42L222-674l-39.77 68L269-541.23q-5 13.46-7 29.23t-2 32.77q0 15.23 2 30.23t6.23 29.23l-86 65.77L222-286l99-42q23.54 23.77 48.88 38.12 25.35 14.34 57.12 22.34L440-160Zm38.92-220q41.85 0 70.93-29.08 29.07-29.07 29.07-70.92t-29.07-70.92Q520.77-580 478.92-580q-42.07 0-71.04 29.08-28.96 29.07-28.96 70.92t28.96 70.92Q436.85-380 478.92-380ZM480-480Z'/></svg>"
  },
  {
    IconName: "Sync",
    Filled: false,
    Path: "<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M186.15-186.15v-40H310l-42.15-41.7q-46.62-45.23-67.23-99.23-20.62-54-20.62-109.38 0-96.39 54.96-174.42Q289.92-728.92 380-762.31v42.46q-72.77 30.62-116.38 96.97Q220-556.54 220-476.46q0 48.84 18.54 94.81 18.54 45.96 57.61 85.03l40.77 40.77v-121.07h40v190.77H186.15ZM580-197.69v-42.46q72.77-30.62 116.38-96.97Q740-403.46 740-483.54q0-48.84-18.54-94.81-18.54-45.96-57.61-85.03l-40.77-40.77v121.07h-40v-190.77h190.77v40H650l42.15 41.7q45.93 45.92 66.89 99.57Q780-538.92 780-483.54q0 96.39-54.96 174.42Q670.08-231.08 580-197.69Z'/></svg>"
  }
])};

////////////////////
// Icon Processor //
////////////////////

Func_IconSvg(IconKey:Text, IconColor:Color):Text = 
// Image control → Image(
With(
    {

        // 2) Make the SVG colorable and strip fixed sizes
        base:
            Substitute(
                Substitute(
                    Substitute(
                        Substitute(
                            Substitute(
                                Substitute(LookUp(GoogleMaterialIcons,IconName=IconKey).Path,
                                    "fill=""#", "fill=""currentColor"""),
                                "fill='#", "fill='currentColor'"),
                            "stroke=""#", "stroke=""currentColor"""),
                        "stroke='#", "stroke='currentColor'"),
                    "height=""24px""",""),
                "width=""24px""",""),

        // 3) Pick your colour (any theme token) and turn it into rgba(...) with JSON trick
        rgba: Substitute(JSON(IconColor), """", "")
    },
    // 4) Return a data URI the Image control can render
    "data:image/svg+xml;utf8," &
    EncodeUrl(
        // inject style="color: ..." so fill='currentColor' picks it up
        If(
            Or(Find("style=""", base) > 0, Find("style='", base) > 0),
            If(
                Find("style=""", base) > 0,
                Substitute(base, "style=""", "style=""color:" & rgba & "; "),
                Substitute(base, "style='",  "style='color:" & rgba & "; ")
            ),
            Substitute(base, "<svg", "<svg style='color:" & rgba & "'")
        )
    )
);





/////////////////////////////
//  SQL Stored Procedures  //
/////////////////////////////

//Generate Core
Func_GenerateCore(ReportID: Number, UserID:Number): Void = {
    Set(AppStatus,"Loading"); Set(AppStatusText,"Fetching from master data, please wait...");
    With({sql: sp.uiStoreGenerateCoreNHV1({ReportID:ReportID,UserID:UserID})}, 
    If(sql.OutputParameters.SQL_Success=false, 
        Set(AppStatus,"Error"); Set(AppStatusText,sql.OutputParameters.SQL_Message), 
        Set(AppStatus, "Success"); Set(AppStatusText, sql.OutputParameters.SQL_Message);
        ClearCollect(ReportGrid,sql.OutputParameters.Output_Report)))
};

//Check Report Exists
Func_CheckReportExists(ReportID: Number): Void = {
    Set(AppStatus,"Loading"); 
    Set(AppStatusText,"Checking report status, please wait...");
    With(
        { sql: sp.uiCheckReportExists({ReportID: ReportID}) }, 
        If(
            sql.OutputParameters.ReportFound,
            /* THEN */
            Set(AppStatus,"Success"); 
            Set(AppStatusText, sql.OutputParameters.SQL_Message),
            /* ELSE */
            Set(AppStatus,"Loading"); 
            Set(AppStatusText,"This report has not yet been built, triggering a full build now, please wait...");
            Func_GenerateCore(ReportID,  UserLoggedIn.MyID)
        )
    )
};

//Generate Store
Func_GenerateStore(ReportID: Number, UserID:Number): Void = {
    Set(AppStatus,"Loading"); Set(AppStatusText,"Calculating the report, please wait...");
    With({sql: sp.uiStoreGenerateStoreNHV1({ReportID:ReportID,UserID:UserID})}, 
    If(sql.OutputParameters.SQL_Success=false, 
        Set(AppStatus,"Error"); Set(AppStatusText,sql.OutputParameters.SQL_Message), 
        Set(AppStatus, "Success"); Set(AppStatusText, sql.OutputParameters.SQL_Message);
        ClearCollect(ReportGrid,sql.OutputParameters.Output_Report)))

};
// Check-only: return true/false, no side-effects
Func_InlineCheckReportExists(ReportID: Number): Boolean = {
    With(
        { sql: sp.uiCheckReportExists({ ReportID: ReportID }) },
        Coalesce(sql.OutputParameters.ReportFound, false)
    )};

//Get All Bay Rules for Report ID
Func_BayRule_GetAllForReport(ReportID: Number): Void=
{Set(AppStatus,"Loading"); Set(AppStatusText, "Storing updated value to database, please wait...");
With(
    {sql: sp.uiNEWGetBayRulesByReportID({ReportID:ReportID})}, 
    If(sql.OutputParameters.SQL_Success=true, 
        Set(AppStatus,"Success"); Set(AppStatusText,sql.OutputParameters.SQL_Message); ClearCollect(BayRules,sql.ResultSets.Table1), 
        Set(AppStatus,"Error"); Set(AppStatusText,sql.OutputParameters.SQL_Message))
)
    }
;


//GetMainGrid
Func_GetMainGrid(ReportID: Number, GranularityCode: Text): Void = 
{If(
    Func_InlineCheckReportExists(ReportID),
    /* THEN: proceed to fetch data */
    Set(AppStatus, "Loading"); 
    Set(AppStatusText, "Fetching report content, please wait...");
    With(
        { sql: sp.uiNEWGetReportData({ ReportID: ReportID, Granularity: GranularityCode }) },
        If(
            sql.OutputParameters.SQL_Success = false,
            Set(AppStatus, "Error"); 
            Set(AppStatusText, sql.OutputParameters.SQL_Message),
            Set(AppStatus, "Success"); 
            Set(AppStatusText, sql.OutputParameters.SQL_Message);
            ClearCollect(ReportGrid, sql.ResultSets.Table1);
            Func_BayRule_GetAllForReport(ReportID);
            ClearCollect(
    ReportGridWithOverrides,
    AddColumns(
        ReportGrid,
        BayOutputOverride,
        LookUp(
            BayRules,
            Group_Key = "OutputOverrides" && Gran_Code = Category_Code,
            ValueToSet
        )
    )
);

            If(AppStatusText="Success: Rules retrieved successfully.", Set(AppStatus,"Success"); Set(AppStatusText,"Report data and overrides successfully loaded."))
        )
    ),
    /* ELSE: block and prompt the user to run the build first */
    Set(AppStatus, "Warning"); 
    Set(AppStatusText, "This report hasn’t been generated yet. Please run Generate first, then try again.")
)};

//Bay Output Override Update Single Value Local
Func_Update_BayOutputOverride_Single(CategoryCode: Number, BayOverride:Number, ClearOut:Boolean):Void =
{Patch(ReportGridWithOverrides,LookUp(ReportGridWithOverrides,Category_Code=CategoryCode),{BayOutputOverride:If(ClearOut=true,Blank(), BayOverride)})};

