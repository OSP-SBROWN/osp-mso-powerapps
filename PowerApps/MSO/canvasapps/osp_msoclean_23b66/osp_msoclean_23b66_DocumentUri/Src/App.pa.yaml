# ************************************************************************************************
# Warning: YAML source code for Canvas Apps should only be used to review changes made within Power Apps Studio and for minor edits (Preview).
# Use the maker portal to create and edit your Power Apps.
# 
# The schema file for Canvas Apps is available at https://go.microsoft.com/fwlink/?linkid=2304907
# 
# For more information, visit https://go.microsoft.com/fwlink/?linkid=2292623
# ************************************************************************************************
App:
  Properties:
    Formulas: "=GetUserFromEmail(): Void = {Set(UserLoggedIn, LookUp(Users,O365Email=User().Email))};\r\n\r\n//Dictionary Translator\r\nDict(KeyWordSearch: Text):Text = LookUp(Dictionary,KeyWord=KeyWordSearch,ClientWord);\r\n\r\nGetGoogleMaterialIcons(): Void = {ClearCollect(GoogleMaterialIcons, [\r\n    {\r\n    IconName: \"Add\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M460-460H240v-40h220v-220h40v220h220v40H500v220h-40v-220Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Check\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M382-267.69 183.23-466.46 211.77-495 382-324.77 748.23-691l28.54 28.54L382-267.69Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Close\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M256-227.69 227.69-256l224-224-224-224L256-732.31l224 224 224-224L732.31-704l-224 224 224 224L704-227.69l-224-224-224 224Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Delete\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M304.62-160q-26.85 0-45.74-18.88Q240-197.77 240-224.62V-720h-40v-40h160v-30.77h240V-760h160v40h-40v495.38q0 27.62-18.5 46.12Q683-160 655.38-160H304.62ZM680-720H280v495.38q0 10.77 6.92 17.7 6.93 6.92 17.7 6.92h350.76q9.24 0 16.93-7.69 7.69-7.69 7.69-16.93V-720ZM392.31-280h40v-360h-40v360Zm135.38 0h40v-360h-40v360ZM280-720v520-520Z'/></svg>\"\r\n  },\r\n  {IconName: \"Edit\", Filled: false, Path:\"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M200-200h43.92l427.93-427.92-43.93-43.93L200-243.92V-200Zm-40 40v-100.77l527.23-527.77q6.15-5.48 13.57-8.47 7.43-2.99 15.49-2.99t15.62 2.54q7.55 2.54 13.94 9.15l42.69 42.93q6.61 6.38 9.04 14 2.42 7.63 2.42 15.25 0 8.13-2.74 15.56-2.74 7.42-8.72 13.57L260.77-160H160Zm600.77-556.31-44.46-44.46 44.46 44.46ZM649.5-649.5l-21.58-22.35 43.93 43.93-22.35-21.58Z'/></svg>\"},\r\n  {\r\n    IconName: \"FilterAlt\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M470.77-200q-13.15 0-21.96-8.81T440-230.77v-223.08L224.15-726.77q-8.07-10.77-2.19-22Q227.85-760 240.77-760h478.46q12.92 0 18.81 11.23 5.88 11.23-2.19 22L520-453.85v223.08q0 13.15-8.81 21.96T489.23-200h-18.46ZM480-468l198-252H282l198 252Zm0 0Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"FilterList\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M422.31-280v-40h114.61v40H422.31Zm-150-180v-40h414.61v40H272.31ZM160-640v-40h640v40H160Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Lock\",\r\n    Filled:false,\r\n    Path:\"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M264.62-120q-26.85 0-45.74-18.88Q200-157.77 200-184.62v-350.76q0-26.85 18.88-45.74Q237.77-600 264.62-600H320v-80q0-66.85 46.58-113.42Q413.15-840 480-840t113.42 46.58Q640-746.85 640-680v80h55.38q26.85 0 45.74 18.88Q760-562.23 760-535.38v350.76q0 26.85-18.88 45.74Q722.23-120 695.38-120H264.62Zm0-40h430.76q10.77 0 17.7-6.92 6.92-6.93 6.92-17.7v-350.76q0-10.77-6.92-17.7-6.93-6.92-17.7-6.92H264.62q-10.77 0-17.7 6.92-6.92 6.93-6.92 17.7v350.76q0 10.77 6.92 17.7 6.93 6.92 17.7 6.92ZM480-300q25.31 0 42.65-17.35Q540-334.69 540-360t-17.35-42.65Q505.31-420 480-420t-42.65 17.35Q420-385.31 420-360t17.35 42.65Q454.69-300 480-300ZM360-600h240v-80q0-50-35-85t-85-35q-50 0-85 35t-35 85v80ZM240-160v-400 400Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"LockOpenRight\", \r\n    Filled: false, \r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M264.62-160h430.76q10.77 0 17.7-6.92 6.92-6.93 6.92-17.7v-350.76q0-10.77-6.92-17.7-6.93-6.92-17.7-6.92H264.62q-10.77 0-17.7 6.92-6.92 6.93-6.92 17.7v350.76q0 10.77 6.92 17.7 6.93 6.92 17.7 6.92ZM480-300q25.31 0 42.65-17.35Q540-334.69 540-360t-17.35-42.65Q505.31-420 480-420t-42.65 17.35Q420-385.31 420-360t17.35 42.65Q454.69-300 480-300ZM240-160v-400 400Zm24.62 40q-26.85 0-45.74-18.88Q200-157.77 200-184.62v-350.76q0-26.85 18.88-45.74Q237.77-600 264.62-600H560v-80q0-66.85 46.58-113.42Q653.15-840 720-840t113.42 46.58Q880-746.85 880-680h-40q0-50-35-85t-85-35q-50 0-85 35t-35 85v80h95.38q26.85 0 45.74 18.88Q760-562.23 760-535.38v350.76q0 26.85-18.88 45.74Q722.23-120 695.38-120H264.62Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Logout\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M224.62-160q-27.62 0-46.12-18.5Q160-197 160-224.62v-510.76q0-27.62 18.5-46.12Q197-800 224.62-800h256.15v40H224.62q-9.24 0-16.93 7.69-7.69 7.69-7.69 16.93v510.76q0 9.24 7.69 16.93 7.69 7.69 16.93 7.69h256.15v40H224.62Zm433.84-178.46-28.08-28.77L723.15-460H367.69v-40h355.46l-92.77-92.77 28.08-28.77L800-480 658.46-338.46Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Menu\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M160-269.23v-40h640v40H160ZM160-460v-40h640v40H160Zm0-190.77v-40h640v40H160Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"OpenInNew\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M224.62-160q-27.62 0-46.12-18.5Q160-197 160-224.62v-510.76q0-27.62 18.5-46.12Q197-800 224.62-800h224.61v40H224.62q-9.24 0-16.93 7.69-7.69 7.69-7.69 16.93v510.76q0 9.24 7.69 16.93 7.69 7.69 16.93 7.69h510.76q9.24 0 16.93-7.69 7.69-7.69 7.69-16.93v-224.61h40v224.61q0 27.62-18.5 46.12Q763-160 735.38-160H224.62Zm164.92-201.23-28.31-28.31L731.69-760H560v-40h240v240h-40v-171.69L389.54-361.23Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"PanelRightClose\",\r\n    Filled: false,\r\n    Path:\"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M336.15-606.92v253.84L463.85-480l-127.7-126.92ZM224.62-160q-26.85 0-45.74-18.88Q160-197.77 160-224.62v-510.76q0-26.85 18.88-45.74Q197.77-800 224.62-800h510.76q26.85 0 45.74 18.88Q800-762.23 800-735.38v510.76q0 26.85-18.88 45.74Q762.23-160 735.38-160H224.62ZM640-200h120v-535.38q0-9.24-7.69-16.93-7.69-7.69-16.93-7.69H640v560Zm-40 0v-560H224.62q-9.24 0-16.93 7.69-7.69 7.69-7.69 16.93v510.76q0 9.24 7.69 16.93 7.69 7.69 16.93 7.69H600Zm40 0h120-120Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName:\"PanelRightOpen\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M463.85-353.08v-253.84L336.15-480l127.7 126.92ZM224.62-160q-26.85 0-45.74-18.88Q160-197.77 160-224.62v-510.76q0-26.85 18.88-45.74Q197.77-800 224.62-800h510.76q26.85 0 45.74 18.88Q800-762.23 800-735.38v510.76q0 26.85-18.88 45.74Q762.23-160 735.38-160H224.62ZM640-200h120v-535.38q0-9.24-7.69-16.93-7.69-7.69-16.93-7.69H640v560Zm-40 0v-560H224.62q-9.24 0-16.93 7.69-7.69 7.69-7.69 16.93v510.76q0 9.24 7.69 16.93 7.69 7.69 16.93 7.69H600Zm40 0h120-120Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"PlayArrow\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M360-272.31v-415.38L686.15-480 360-272.31ZM400-480Zm0 134 211.54-134L400-614v268Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"PlayCircle\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M400-336.92 623.08-480 400-623.08v286.16ZM480.13-120q-74.67 0-140.41-28.34-65.73-28.34-114.36-76.92-48.63-48.58-76.99-114.26Q120-405.19 120-479.87q0-74.67 28.34-140.41 28.34-65.73 76.92-114.36 48.58-48.63 114.26-76.99Q405.19-840 479.87-840q74.67 0 140.41 28.34 65.73 28.34 114.36 76.92 48.63 48.58 76.99 114.26Q840-554.81 840-480.13q0 74.67-28.34 140.41-28.34 65.73-76.92 114.36-48.58 48.63-114.26 76.99Q554.81-120 480.13-120Zm-.13-40q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"PlayDisabled\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M610.31-432.92 582-461.69l27.69-16.93-130.3-85.23L360-683.23v-4.46L686.15-480l-75.84 47.08Zm96.61 266.15L507.69-366.46 360-272.31v-241.84L165.23-708.92l28.31-28.31 542.15 542.15-28.77 28.31ZM400-472.62ZM400-346l77.38-49.23L400-472.62V-346Zm79.39-217.85Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Refresh\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M483.08-200q-117.25 0-198.63-81.34-81.37-81.34-81.37-198.54 0-117.2 81.37-198.66Q365.83-760 483.08-760q71.3 0 133.54 33.88 62.23 33.89 100.3 94.58V-760h40v209.23H547.69v-40h148q-31.23-59.85-87.88-94.54Q551.15-720 483.08-720q-100 0-170 70t-70 170q0 100 70 170t170 70q77 0 139-44t87-116h42.46Q725.08-310.15 651-255.08 576.92-200 483.08-200Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Search\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M779.38-153.85 528.92-404.31q-30 25.54-69 39.54t-78.38 14q-96.1 0-162.67-66.53-66.56-66.53-66.56-162.57 0-96.05 66.53-162.71 66.53-66.65 162.57-66.65 96.05 0 162.71 66.56Q610.77-676.1 610.77-580q0 41.69-14.77 80.69t-38.77 66.69l250.46 250.47-28.31 28.3ZM381.54-390.77q79.61 0 134.42-54.81 54.81-54.8 54.81-134.42 0-79.62-54.81-134.42-54.81-54.81-134.42-54.81-79.62 0-134.42 54.81-54.81 54.8-54.81 134.42 0 79.62 54.81 134.42 54.8 54.81 134.42 54.81Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Settings\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='m405.38-120-14.46-115.69q-19.15-5.77-41.42-18.16-22.27-12.38-37.88-26.53L204.92-235l-74.61-130 92.23-69.54q-1.77-10.84-2.92-22.34-1.16-11.5-1.16-22.35 0-10.08 1.16-21.19 1.15-11.12 2.92-25.04L130.31-595l74.61-128.46 105.93 44.61q17.92-14.92 38.77-26.92 20.84-12 40.53-18.54L405.38-840h149.24l14.46 116.46q23 8.08 40.65 18.54 17.65 10.46 36.35 26.15l109-44.61L829.69-595l-95.31 71.85q3.31 12.38 3.7 22.73.38 10.34.38 20.42 0 9.31-.77 19.65-.77 10.35-3.54 25.04L827.92-365l-74.61 130-107.23-46.15q-18.7 15.69-37.62 26.92-18.92 11.23-39.38 17.77L554.62-120H405.38ZM440-160h78.23L533-268.31q30.23-8 54.42-21.96 24.2-13.96 49.27-38.27L736.46-286l39.77-68-87.54-65.77q5-17.08 6.62-31.42 1.61-14.35 1.61-28.81 0-15.23-1.61-28.81-1.62-13.57-6.62-29.88L777.77-606 738-674l-102.08 42.77q-18.15-19.92-47.73-37.35-29.57-17.42-55.96-23.11L520-800h-79.77l-12.46 107.54q-30.23 6.46-55.58 20.81-25.34 14.34-50.42 39.42L222-674l-39.77 68L269-541.23q-5 13.46-7 29.23t-2 32.77q0 15.23 2 30.23t6.23 29.23l-86 65.77L222-286l99-42q23.54 23.77 48.88 38.12 25.35 14.34 57.12 22.34L440-160Zm38.92-220q41.85 0 70.93-29.08 29.07-29.07 29.07-70.92t-29.07-70.92Q520.77-580 478.92-580q-42.07 0-71.04 29.08-28.96 29.07-28.96 70.92t28.96 70.92Q436.85-380 478.92-380ZM480-480Z'/></svg>\"\r\n  },\r\n  {\r\n    IconName: \"Sync\",\r\n    Filled: false,\r\n    Path: \"<svg xmlns='http://www.w3.org/2000/svg' height='24px' viewBox='0 -960 960 960' width='24px' fill='currentColor'><path d='M186.15-186.15v-40H310l-42.15-41.7q-46.62-45.23-67.23-99.23-20.62-54-20.62-109.38 0-96.39 54.96-174.42Q289.92-728.92 380-762.31v42.46q-72.77 30.62-116.38 96.97Q220-556.54 220-476.46q0 48.84 18.54 94.81 18.54 45.96 57.61 85.03l40.77 40.77v-121.07h40v190.77H186.15ZM580-197.69v-42.46q72.77-30.62 116.38-96.97Q740-403.46 740-483.54q0-48.84-18.54-94.81-18.54-45.96-57.61-85.03l-40.77-40.77v121.07h-40v-190.77h190.77v40H650l42.15 41.7q45.93 45.92 66.89 99.57Q780-538.92 780-483.54q0 96.39-54.96 174.42Q670.08-231.08 580-197.69Z'/></svg>\"\r\n  }\r\n])};\r\n\r\n////////////////////\r\n// Icon Processor //\r\n////////////////////\r\n\r\nFunc_IconSvg(IconKey:Text, IconColor:Color):Text = \r\n// Image control → Image(\r\nWith(\r\n    {\r\n\r\n        // 2) Make the SVG colorable and strip fixed sizes\r\n        base:\r\n            Substitute(\r\n                Substitute(\r\n                    Substitute(\r\n                        Substitute(\r\n                            Substitute(\r\n                                Substitute(LookUp(GoogleMaterialIcons,IconName=IconKey).Path,\r\n                                    \"fill=\"\"#\", \"fill=\"\"currentColor\"\"\"),\r\n                                \"fill='#\", \"fill='currentColor'\"),\r\n                            \"stroke=\"\"#\", \"stroke=\"\"currentColor\"\"\"),\r\n                        \"stroke='#\", \"stroke='currentColor'\"),\r\n                    \"height=\"\"24px\"\"\",\"\"),\r\n                \"width=\"\"24px\"\"\",\"\"),\r\n\r\n        // 3) Pick your colour (any theme token) and turn it into rgba(...) with JSON trick\r\n        rgba: Substitute(JSON(IconColor), \"\"\"\", \"\")\r\n    },\r\n    // 4) Return a data URI the Image control can render\r\n    \"data:image/svg+xml;utf8,\" &\r\n    EncodeUrl(\r\n        // inject style=\"color: ...\" so fill='currentColor' picks it up\r\n        If(\r\n            Or(Find(\"style=\"\"\", base) > 0, Find(\"style='\", base) > 0),\r\n            If(\r\n                Find(\"style=\"\"\", base) > 0,\r\n                Substitute(base, \"style=\"\"\", \"style=\"\"color:\" & rgba & \"; \"),\r\n                Substitute(base, \"style='\",  \"style='color:\" & rgba & \"; \")\r\n            ),\r\n            Substitute(base, \"<svg\", \"<svg style='color:\" & rgba & \"'\")\r\n        )\r\n    )\r\n);\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////////////\r\n//  SQL Stored Procedures  //\r\n/////////////////////////////\r\n\r\n//Generate Core\r\nFunc_GenerateCore(ReportID: Number, UserID:Number): Void = {\r\n    Set(AppStatus,\"Loading\"); Set(AppStatusText,\"Fetching from master data, please wait...\");\r\n    With({sql: sp.uiStoreGenerateCoreNHV1({ReportID:ReportID,UserID:UserID})}, \r\n    If(sql.OutputParameters.SQL_Success=false, \r\n        Set(AppStatus,\"Error\"); Set(AppStatusText,sql.OutputParameters.SQL_Message), \r\n        Set(AppStatus, \"Success\"); Set(AppStatusText, sql.OutputParameters.SQL_Message);\r\n        ClearCollect(ReportGrid,sql.OutputParameters.Output_Report)))\r\n};\r\n\r\n//Check Report Exists\r\nFunc_CheckReportExists(ReportID: Number): Void = {\r\n    Set(AppStatus,\"Loading\"); \r\n    Set(AppStatusText,\"Checking report status, please wait...\");\r\n    With(\r\n        { sql: sp.uiCheckReportExists({ReportID: ReportID}) }, \r\n        If(\r\n            sql.OutputParameters.ReportFound,\r\n            /* THEN */\r\n            Set(AppStatus,\"Success\"); \r\n            Set(AppStatusText, sql.OutputParameters.SQL_Message),\r\n            /* ELSE */\r\n            Set(AppStatus,\"Loading\"); \r\n            Set(AppStatusText,\"This report has not yet been built, triggering a full build now, please wait...\");\r\n            Func_GenerateCore(ReportID,  UserLoggedIn.MyID)\r\n        )\r\n    )\r\n};\r\n\r\n//Generate Store\r\nFunc_GenerateStore(ReportID: Number, UserID:Number): Void = {\r\n    Set(AppStatus,\"Loading\"); Set(AppStatusText,\"Calculating the report, please wait...\");\r\n    With({sql: sp.uiStoreGenerateStoreNHV1({ReportID:ReportID,UserID:UserID})}, \r\n    If(sql.OutputParameters.SQL_Success=false, \r\n        Set(AppStatus,\"Error\"); Set(AppStatusText,sql.OutputParameters.SQL_Message), \r\n        Set(AppStatus, \"Success\"); Set(AppStatusText, sql.OutputParameters.SQL_Message);\r\n        ClearCollect(ReportGrid,sql.OutputParameters.Output_Report)))\r\n\r\n};\r\n// Check-only: return true/false, no side-effects\r\nFunc_InlineCheckReportExists(ReportID: Number): Boolean = {\r\n    With(\r\n        { sql: sp.uiCheckReportExists({ ReportID: ReportID }) },\r\n        Coalesce(sql.OutputParameters.ReportFound, false)\r\n    )};\r\n\r\n//Get All Bay Rules for Report ID\r\nFunc_BayRule_GetAllForReport(ReportID: Number): Void=\r\n{Set(AppStatus,\"Loading\"); Set(AppStatusText, \"Storing updated value to database, please wait...\");\r\nWith(\r\n    {sql: sp.uiNEWGetBayRulesByReportID({ReportID:ReportID})}, \r\n    If(sql.OutputParameters.SQL_Success=true, \r\n        Set(AppStatus,\"Success\"); Set(AppStatusText,sql.OutputParameters.SQL_Message); ClearCollect(BayRules,sql.ResultSets.Table1), \r\n        Set(AppStatus,\"Error\"); Set(AppStatusText,sql.OutputParameters.SQL_Message))\r\n)\r\n    }\r\n;\r\n\r\n\r\n//GetMainGrid\r\nFunc_GetMainGrid(ReportID: Number, GranularityCode: Text): Void = \r\n{If(\r\n    Func_InlineCheckReportExists(ReportID),\r\n    /* THEN: proceed to fetch data concurrently */\r\n    Set(AppStatus, \"Loading\"); \r\n    Set(AppStatusText, \"Fetching report content and bay rules, please wait...\");\r\n    With(\r\n        { \r\n            reportSql: sp.uiNEWGetReportData({ ReportID: ReportID, Granularity: GranularityCode }),\r\n            bayRulesSql: sp.uiNEWGetBayRulesByReportID({ReportID:ReportID})\r\n        },\r\n        If(\r\n            reportSql.OutputParameters.SQL_Success = false,\r\n            Set(AppStatus, \"Error\"); \r\n            Set(AppStatusText, reportSql.OutputParameters.SQL_Message),\r\n            If(\r\n                bayRulesSql.OutputParameters.SQL_Success = false,\r\n                Set(AppStatus, \"Error\"); \r\n                Set(AppStatusText, bayRulesSql.OutputParameters.SQL_Message),\r\n                /* Both calls succeeded - combine the data in one operation */\r\n                Set(AppStatus, \"Success\"); \r\n                Set(AppStatusText, \"Report data and overrides successfully loaded.\");\r\n                ClearCollect(ReportGrid, reportSql.ResultSets.Table1);\r\n                ClearCollect(BayRules, bayRulesSql.ResultSets.Table1);\r\n                ClearCollect(\r\n                    ReportGridWithOverrides,\r\n                    AddColumns(\r\n                        AddColumns(\r\n                            ReportGrid,\r\n                            BayOutputOverride,\r\n                            Value(LookUp(\r\n                                BayRules,\r\n                                Group_Key = \"OutputOverrides\" && Gran_Code = Category_Code,\r\n                                ValueToSet\r\n                            ))\r\n                        ),\r\n                        ExcludeFromAnalysis_Override,\r\n                        Value(LookUp(\r\n                            BayRules,\r\n                            Group_Key = \"Excludes\" && Gran_Code = Category_Code,\r\n                            ValueToSet\r\n                        ))\r\n                    )\r\n                )\r\n            )\r\n        )\r\n    ),\r\n    /* ELSE: block and prompt the user to run the build first */\r\n    Set(AppStatus, \"Warning\"); \r\n    Set(AppStatusText, \"This report hasn’t been generated yet. Please run Generate first, then try again.\")\r\n)};\r\n\r\n//Bay Output Override Update Single Value Local\r\nFunc_Update_BayOutputOverride_Single(CategoryCode: Number, BayOverride:Number, ClearOut:Boolean):Void =\r\n{Patch(ReportGridWithOverrides,LookUp(ReportGridWithOverrides,Category_Code=CategoryCode),{BayOutputOverride:If(ClearOut=true,Blank(), BayOverride)})};\r\n\r\n//Exclude From Analysis Override Update Single Value Local\r\nFunc_Update_ExcludeFromAnalysis_Single(CategoryCode: Number, ExcludeValue:Number, ClearOut:Boolean):Void =\r\n{Patch(ReportGridWithOverrides,LookUp(ReportGridWithOverrides,Category_Code=CategoryCode),{ExcludeFromAnalysis_Override:If(ClearOut=true,Blank(), ExcludeValue)})};\r\n\r\n//Toggle Exclude From Analysis Override - OnSelect Formula for Toggle Button\r\nFunc_Toggle_ExcludeFromAnalysis_Override(CategoryCode: Number): Void =\r\n{Set(currentRecord, LookUp(ReportGridWithOverrides, Category_Code = CategoryCode));\r\nIf(\r\n    IsBlank(currentRecord),\r\n    /* Record not found - show error */\r\n    Set(AppStatus, \"Error\"); Set(AppStatusText, \"Record not found for Category_Code: \" & CategoryCode),\r\n    If(\r\n        IsBlank(currentRecord.ExcludeFromAnalysis_Override),\r\n        /* No override exists - set override to opposite of base value */\r\n        Set(AppStatus, \"Processing\"); Set(AppStatusText, \"Setting override for Category \" & CategoryCode);\r\n        Set(newOverrideValue, If(Coalesce(currentRecord.Exclude_from_analysis, 0) = 1, 0, 1));\r\n        Func_Update_ExcludeFromAnalysis_Single(CategoryCode, newOverrideValue, false);\r\n        Set(AppStatus, \"Success\"); Set(AppStatusText, \"Override set to \" & newOverrideValue & \" for Category \" & CategoryCode & \" (unsaved)\"),\r\n        /* Override exists - clear it */\r\n        Set(AppStatus, \"Processing\"); Set(AppStatusText, \"Clearing override for Category \" & CategoryCode);\r\n        Func_Update_ExcludeFromAnalysis_Single(CategoryCode, 0, true);\r\n        Set(AppStatus, \"Success\"); Set(AppStatusText, \"Override cleared for Category \" & CategoryCode & \". Using base value: \" & currentRecord.Exclude_from_analysis & \" (unsaved)\")\r\n    )\r\n)};\r\n\r\n//Save Override Values to Database - Manages OutputOverrides and Excludes BayRules  \r\nFunc_SaveOverridesToDatabase(ReportID: Number): Void =\r\n{Set(AppStatus, \"Loading\"); Set(AppStatusText, \"Saving override values to database, please wait...\");\r\n// Build JSON payload with current local override state\r\n// Empty collection = \"[]\" (clears all), populated collection = JSON with overrides\r\nSet(\r\n    jsonPayload,\r\n    \"[\" & \r\n    Concat(\r\n        Filter(ReportGridWithOverrides, Not(IsBlank(BayOutputOverride))),\r\n        \"{\"\"Granularity\"\":\"\"C\"\",\"\"Gran_Code\"\":\" & Category_Code & \r\n        \",\"\"ApplyColumn\"\":\"\"BayOutput\"\",\"\"ValueToSet\"\":\"\"\" & BayOutputOverride & \r\n        \"\"\",\"\"Var_or_Col\"\":\"\"C\"\",\"\"Group_Key\"\":\"\"OutputOverrides\"\"}\",\r\n        \",\"\r\n    ) & \r\n    If(\r\n        Not(IsBlank(Concat(Filter(ReportGridWithOverrides, Not(IsBlank(BayOutputOverride))), \"x\"))) && \r\n        Not(IsBlank(Concat(Filter(ReportGridWithOverrides, Not(IsBlank(ExcludeFromAnalysis_Override))), \"x\"))), \r\n        \",\", \r\n        \"\"\r\n    ) & \r\n    Concat(\r\n        Filter(ReportGridWithOverrides, Not(IsBlank(ExcludeFromAnalysis_Override))),\r\n        \"{\"\"Granularity\"\":\"\"C\"\",\"\"Gran_Code\"\":\" & Category_Code & \r\n        \",\"\"ApplyColumn\"\":\"\"Exclude_from_analysis\"\",\"\"ValueToSet\"\":\"\"\" & ExcludeFromAnalysis_Override & \r\n        \"\"\",\"\"Var_or_Col\"\":\"\"C\"\",\"\"Group_Key\"\":\"\"Excludes\"\"}\",\r\n        \",\"\r\n    ) & \r\n    \"]\"\r\n);\r\n// Single call: Replace all bay rules with current local state\r\nSet(\r\n    sqlResult,\r\n    sp.uiNEWManageBayRules({ReportID: ReportID, BayRulesLocal: jsonPayload})\r\n);\r\nIf(\r\n    sqlResult.OutputParameters.SQL_Success = false,\r\n    Set(AppStatus, \"Error\"); Set(AppStatusText, \"Save failed: \" & sqlResult.OutputParameters.SQL_Message),\r\n    Set(AppStatus, \"Success\"); Set(AppStatusText, \"Override changes saved successfully\")\r\n)};\r\n\r\n//Save All Changes - Complete save operation for all overrides\r\nFunc_SaveAllChanges(ReportID: Number): Void =\r\n{If(\r\n    CountRows(Filter(ReportGridWithOverrides, Not(IsBlank(BayOutputOverride)) Or Not(IsBlank(ExcludeFromAnalysis_Override)))) > 0,\r\n    /* Has changes to save */\r\n    Func_SaveOverridesToDatabase(ReportID),\r\n    /* No changes to save */\r\n    Set(AppStatus, \"Info\"); Set(AppStatusText, \"No override changes to save.\")\r\n)};\r\n\r\n//Get Report Details from RVA\r\nFunc_GetReportDetails(ReportID: Number): Void = \r\n{\r\n    If(IsBlankOrError(ReportID),Set(AppStatus,\"Warning\");Set(AppStatusText,\"Please select a report before editing details.\"),\r\n        Set(AppStatus,\"Loading\");Set(AppStatusText,\"Fetching report details from database, please wait...\"); \r\n        With({sql: sp.uiRVAGetDetails({ReportID:ReportID})}, \r\n            If(sql.OutputParameters.SQL_Success=false, \r\n            Set(AppStatus,\"Error\"); Set(AppStatusText,sql.OutputParameters.SQL_Message), \r\n            Set(AppStatus,\"Success\"); Set(AppStatusText,sql.OutputParameters.SQL_Message);\r\n            // Store original details (read-only reference)\r\n            Set(Selected_Report_Details,sql.OutputParameters);\r\n            // Create true copy for modifications (bind controls to this)\r\n            Set(Updated_Report_Details, sql.OutputParameters);\r\n            // Initialize UI selections\r\n            Func_SetComboBoxSelections()))\r\n    )\r\n};\r\n\r\n//Check if Report Details have been modified\r\nFunc_HasReportDetailsChanged(): Boolean = \r\n{\r\n    JSON(Selected_Report_Details) <> JSON(Updated_Report_Details)\r\n};\r\n\r\n//Reset Report Details to original values\r\nFunc_ResetReportDetails(): Void = \r\n{\r\n    // Reset data to original values\r\n    Set(Updated_Report_Details, Selected_Report_Details);\r\n    // Reset UI selections to match the original data\r\n    Func_SetComboBoxSelections();\r\n    Set(AppStatus, \"Info\"); \r\n    Set(AppStatusText, \"Report details reset to original values\")\r\n};\r\n\r\n//Set UI combo box selections to match global variable data\r\nFunc_SetComboBoxSelections(): Void = \r\n{\r\n    Set(UI_SelectedLocation, LookUp(Locations, Location_Code = Value(Updated_Report_Details.RVA_BranchNumber)));\r\n    Set(AppStatus, \"Info\"); \r\n    Set(AppStatusText, \"UI selections updated to match report data\")\r\n};\r\n\r\n//Update a single field in Updated_Report_Details\r\nFunc_UpdateReportDetail(FieldName: Text, NewValue: Text): Void = \r\n{\r\n    // Debug: Set status to show function is running\r\n    Set(AppStatus, \"Processing\"); \r\n    Set(AppStatusText, \"Updating \" & FieldName & \" to: \" & NewValue);\r\n    \r\n    Switch(\r\n        FieldName,\r\n        // Integer fields\r\n        \"RVA_ReportID\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_ReportID: Value(NewValue)})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_ReportID to \" & NewValue),\r\n        \"RVA_BranchNumber\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_BranchNumber: Value(NewValue)})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_BranchNumber to \" & NewValue),\r\n        \"RVA_PerfStartDate\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_PerfStartDate: Value(NewValue)})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_PerfStartDate to \" & NewValue),\r\n        \"RVA_PerfEndDate\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_PerfEndDate: Value(NewValue)})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_PerfEndDate to \" & NewValue),\r\n        \"RVA_CohortStores\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_CohortStores: Value(NewValue)})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_CohortStores to \" & NewValue),\r\n        \"RVA_DaysTrading\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_DaysTrading: Value(NewValue)})),\r\n        \"RVA_BayRulesCount\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_BayRulesCount: Value(NewValue)})),\r\n        \"RVA_CoreTablesCreated\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_CoreTablesCreated: Value(NewValue)})),\r\n        \"RVA_Cluster_ID\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_Cluster_ID: Value(NewValue)})),\r\n        // Text fields\r\n        \"RVA_ReportOwner\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_ReportOwner: NewValue})),\r\n        \"RVA_ReportName\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_ReportName: NewValue})),\r\n        \"RVA_MacroSpaceDate\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_MacroSpaceDate: NewValue})),\r\n        \"RVA_Cohort\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_Cohort: NewValue})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_Cohort to \" & NewValue),\r\n        \"RVA_BranchName\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_BranchName: NewValue})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_BranchName to \" & NewValue),\r\n        \"RVA_UnitOfMeasure\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_UnitOfMeasure: NewValue})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_UnitOfMeasure to \" & NewValue),\r\n        \"RVA_ViewbyStoreTempcatDept\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_ViewbyStoreTempcatDept: NewValue})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_ViewbyStoreTempcatDept to \" & NewValue),\r\n        \"RVA_DensityMetric\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_DensityMetric: NewValue})); Set(AppStatus, \"Success\"); Set(AppStatusText, \"Updated RVA_DensityMetric to \" & NewValue),\r\n        \"RVA_UMDID\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_UMDID: NewValue})),\r\n        \"RVA_PerfDateExclusions\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_PerfDateExclusions: NewValue})),\r\n        \"RVA_ExcludeCategories\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_ExcludeCategories: NewValue})),\r\n        \"RVA_RefreshTypeNeeded\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_RefreshTypeNeeded: NewValue})),\r\n        \"RVA_LastRefreshed\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_LastRefreshed: NewValue})),\r\n        \"RVA_Status\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_Status: NewValue})),\r\n        // Character fields (Y/N flags)\r\n        \"RVA_MinBaysforMaxRange\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_MinBaysforMaxRange: NewValue})),\r\n        \"RVA_UseProductCube\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_UseProductCube: NewValue})),\r\n        \"RVA_UseTrend\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_UseTrend: NewValue})),\r\n        \"RVA_UseMinLMtr\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_UseMinLMtr: NewValue})),\r\n        \"RVA_UseMaxLMtr\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_UseMaxLMtr: NewValue})),\r\n        \"RVA_IncNumberofProducts\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_IncNumberofProducts: NewValue})),\r\n        // Decimal fields\r\n        \"RVA_FullBaySize\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_FullBaySize: Value(NewValue)})),\r\n        \"RVA_RoundBaySize\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_RoundBaySize: Value(NewValue)})),\r\n        \"RVA_PotentialSalesAdjustment\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_PotentialSalesAdjustment: Value(NewValue)})),\r\n        \"RVA_CubeFlex\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_CubeFlex: Value(NewValue)})),\r\n        \"RVA_TopHighlight\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_TopHighlight: Value(NewValue)})),\r\n        \"RVA_BottomHighlight\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_BottomHighlight: Value(NewValue)})),\r\n        \"RVA_SpaceAdjustment\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_SpaceAdjustment: Value(NewValue)})),\r\n        \"RVA_ElasticitySalesDiff\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_ElasticitySalesDiff: Value(NewValue)})),\r\n        // Float fields\r\n        \"RVA_UnitSalesMix_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_UnitSalesMix_UserSet: Value(NewValue)})),\r\n        \"RVA_ValueSalesMix_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_ValueSalesMix_UserSet: Value(NewValue)})),\r\n        \"RVA_ProfitSalesMix_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_ProfitSalesMix_UserSet: Value(NewValue)})),\r\n        \"RVA_SalesLessWaste_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_SalesLessWaste_UserSet: Value(NewValue)})),\r\n        \"RVA_SalesProfitMix_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_SalesProfitMix_UserSet: Value(NewValue)})),\r\n        \"RVA_SalesMixCube_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_SalesMixCube_UserSet: Value(NewValue)})),\r\n        \"RVA_DOSCasePack_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_DOSCasePack_UserSet: Value(NewValue)})),\r\n        \"RVA_FixtureDensity_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_FixtureDensity_UserSet: Value(NewValue)})),\r\n        \"RVA_MixIncCohort_UserSet\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_MixIncCohort_UserSet: Value(NewValue)})),\r\n        \"RVA_DoSDefault\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_DoSDefault: Value(NewValue)})),\r\n        \"RVA_CasesDefault\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_CasesDefault: Value(NewValue)})),\r\n        \"RVA_BayRoundingThreshold\", Set(Updated_Report_Details, Patch(Updated_Report_Details, {RVA_BayRoundingThreshold: Value(NewValue)})),\r\n        // Default case for unknown fields\r\n        Set(AppStatus, \"Warning\"); Set(AppStatusText, \"Unknown field: \" & FieldName)\r\n    )\r\n};\r\n\r\n//Navigate between report settings tabs\r\nFunc_NavigateReportTabs(Direction: Text): Void = \r\n{\r\n    With(\r\n        {currentTab: First(Filter(ReportSettingsTabs, Selected = true))},\r\n        Switch(\r\n            Direction,\r\n            \"Next\",\r\n            If(\r\n                currentTab.ID < CountRows(ReportSettingsTabs),\r\n                UpdateIf(ReportSettingsTabs, Selected = true, {Selected: false});\r\n                UpdateIf(ReportSettingsTabs, ID = currentTab.ID + 1, {Selected: true});\r\n                Set(AppStatus, \"Info\"); Set(AppStatusText, \"Moved to next tab\"),\r\n                Set(AppStatus, \"Warning\"); Set(AppStatusText, \"Already on last tab\")\r\n            ),\r\n            \"Back\",\r\n            If(\r\n                currentTab.ID > 1,\r\n                UpdateIf(ReportSettingsTabs, Selected = true, {Selected: false});\r\n                UpdateIf(ReportSettingsTabs, ID = currentTab.ID - 1, {Selected: true});\r\n                Set(AppStatus, \"Info\"); Set(AppStatusText, \"Moved to previous tab\"),\r\n                Set(AppStatus, \"Warning\"); Set(AppStatusText, \"Already on first tab\")\r\n            ),\r\n            // Default case\r\n            Set(AppStatus, \"Error\"); Set(AppStatusText, \"Invalid navigation direction: \" & Direction)\r\n        )\r\n    )\r\n};"
    OnStart: |-
      =//Populate nav menu
      ClearCollect(NavItems, 

// Hierarchy management
Func_HierMan_LoadVersions(): Void = {
  Set(AppStatus,"Loading"); Set(AppStatusText,"Loading hierarchy versions, please wait...");
  With(
    {sql: sp.uiHierMan2_GetAllVersions({})},
    If(
      Coalesce(sql.OutputParameters.SQL_Success, 0) = 0,
      Set(AppStatus,"Error"); Set(AppStatusText, Coalesce(sql.OutputParameters.SQL_Message, "Unable to load hierarchy versions."));
      Clear(HierMan_Versions);
      Set(HierMan_SelectedVersion, Blank());
      Clear(HierMan_Detail);
      Clear(HierMan_H1);
      Clear(HierMan_H2);
      Clear(HierMan_H3),
      Set(AppStatus,"Success"); Set(AppStatusText, sql.OutputParameters.SQL_Message);
      ClearCollect(HierMan_Versions, sql.ResultSets.Table1);
      If(
        CountRows(HierMan_Versions) > 0,
        If(
          IsBlank(HierMan_SelectedVersion) || IsBlank(LookUp(HierMan_Versions, ID = HierMan_SelectedVersion.ID)),
          Func_HierMan_SelectVersion(First(HierMan_Versions).ID)
        )
      )
    )
  )
};

Func_HierMan_SelectVersion(VersionId: Number): Void = {
  Set(HierMan_SelectedVersion, LookUp(HierMan_Versions, ID = VersionId));
  If(
    IsBlank(HierMan_SelectedVersion),
    Set(AppStatus,"Warning"); Set(AppStatusText,"Selected hierarchy version not found.");
    Clear(HierMan_Detail);
    Clear(HierMan_H1);
    Clear(HierMan_H2);
    Clear(HierMan_H3),
    Func_HierMan_LoadVersionDetails(VersionId)
  )
};

Func_HierMan_LoadVersionDetails(VersionId: Number): Void = {
  Set(AppStatus,"Loading"); Set(AppStatusText,"Loading hierarchy structure, please wait...");
  With(
    {sql: sp.uiHierMan2_GetFullHierarchy({Hier_Version: VersionId})},
    If(
      Coalesce(sql.OutputParameters.SQL_Success, false) = false,
      Set(AppStatus,"Error"); Set(AppStatusText, Coalesce(sql.OutputParameters.SQL_Message, "Unable to load hierarchy detail."));
      Clear(HierMan_Detail);
      Clear(HierMan_H1);
      Clear(HierMan_H2);
      Clear(HierMan_H3),
      Set(AppStatus,"Success"); Set(AppStatusText, sql.OutputParameters.SQL_Message);
      ClearCollect(HierMan_Detail, sql.ResultSets.Table1);
      ClearCollect(HierMan_H1, sql.ResultSets.Table2);
      ClearCollect(HierMan_H2, sql.ResultSets.Table3);
      ClearCollect(HierMan_H3, sql.ResultSets.Table4)
    )
  )
};

//Navigate between report settings tabs
      {ID: 2, Selected:false, Name: "Hierarchy Admin", Screen: HierMan, Icon:"Filter"}, 
      {ID: 3, Selected:false, Name: "Report Detail", Screen: ReportScreen, Icon:"DocumentBulletList"},
      {ID: 4, Selected:false, Name:"Report Settings", Screen: ReportDetails, Icon: "Settings"},
      {ID: 0, Selected:false, Name: "Quit", Screen: Blank(), Icon:"ArrowExit"});

      //Populate Settings Tabs
      ClearCollect(ReportSettingsTabs, 
      {ID:1, Name: Dict("Location"), Selected: true},
      {ID:2, Name: "Dates", Selected: false},
      {ID:3, Name: "Balance", Selected: true},
      {ID:4, Name: "Other", Selected: true}
      );

      ClearCollect(Reports_Col, ReportVersionAttributes);
      GetUserFromEmail();
      GetGoogleMaterialIcons();


      //Set Granularity Options with Dictionary
      With(
          { Dict: ShowColumns(Dictionary, KeyWord, ClientWord) },
          ClearCollect(
              GranularityOptions,
              { GranNumber: 0, GranLong: LookUp(Dict, KeyWord="Granularity0", ClientWord), GranShort: LookUp(Dict, KeyWord="Gran0", ClientWord) },
              { GranNumber: 1, GranLong: LookUp(Dict, KeyWord="Granularity1", ClientWord), GranShort: LookUp(Dict, KeyWord="Gran1", ClientWord) },
              { GranNumber: 2, GranLong: LookUp(Dict, KeyWord="Granularity2", ClientWord), GranShort: LookUp(Dict, KeyWord="Gran2", ClientWord) }
          )
      );

      //Set Default Granularity
      With({lu: LookUp(GranularityOptions,GranNumber=1)},
      Set(GranularitySelected, {Num:lu.GranNumber, Short: lu.GranShort, Long: lu.GranLong, Code:Switch(lu.GranNumber,0,"S",1,"T",2,"D","T")})
      );

      //ReportGrid Headers
      ClearCollect(
          ReportGrid_Columns,
          {SQL_Name: "Location_Code",        ColumnHeader: Dict("Location Code"),        Visible: true},
          {SQL_Name:"Temp_Category_Name", ColumnHeader:Dict("Granularity1") & " Name", Visible: true},
          {SQL_Name:"Temp_Category_Number", ColumnHeader:Dict("Granularity1") & " Number", Visible: true},
          {SQL_Name:"Dept_Name", ColumnHeader:Dict("Granularity2") & " Name", Visible: true},
          {SQL_Name:"Dept_Number", ColumnHeader:Dict("Granularity2") & " Number", Visible: true},
          {SQL_Name: "Category_Code",        ColumnHeader: Dict("Category Code"),        Visible: true},
          {SQL_Name: "Category_Name",        ColumnHeader: Dict("Category Name"),        Visible: true},
          {SQL_Name: "Exclude_from_analysis",  ColumnHeader:Dict("Exclude From Analysis"), Visible: true},
          {SQL_Name: "Bays",        ColumnHeader: Dict("Current Bays"),        Visible: true},
          {SQL_Name: "Bays_Recc",        ColumnHeader: Dict("Proposed Bays"),        Visible: true}
      );

      //Set Default Report Detail Mode as Add
      Set(ReportDetailMode,"Add");
      //Hierarchy data placeholders
      Clear(HierMan_Versions);
      Clear(HierMan_Detail);
      Clear(HierMan_H1);
      Clear(HierMan_H2);
      Clear(HierMan_H3);
      Set(HierMan_SelectedVersion, Blank());
    Theme: =OSP_Basic
